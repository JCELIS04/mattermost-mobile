name: Detox E2E Android Tests PR

on:
    push:
      branches:
        - test_android_e2e
    pull_request:
      branches:
        - main
        - test_android_e2e
      types:
        - labeled

concurrency:
    group: "${{ github.workflow }}-${{ github.event.pull_request.number }}-${{ github.event.label.name }}"
    cancel-in-progress: true

jobs:
    build-android-apk:
        if: github.event.label.name == 'E2E Android tests for PR' && false
        runs-on: ubuntu-latest-8-cores
        env:
            ORG_GRADLE_PROJECT_jvmargs: -Xmx8g
        steps:
            - name: Prune Docker to free up space
              run: docker system prune -af

            - name: Remove npm Temporary Files
              run: |
               rm -rf ~/.npm/_cacache

            - name: ci/checkout-repo
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
              with:
                ref: ${{ github.event.pull_request.head.sha }}

            - name: ci/prepare-android-build
              uses: ./.github/actions/prepare-android-build
              env:
                STORE_FILE: "${{ secrets.MM_MOBILE_STORE_FILE }}"
                STORE_ALIAS: "${{ secrets.MM_MOBILE_STORE_ALIAS }}"
                STORE_PASSWORD: "${{ secrets.MM_MOBILE_STORE_PASSWORD }}"
                MATTERMOST_BUILD_GH_TOKEN: "${{ secrets.MATTERMOST_BUILD_GH_TOKEN }}"

            - name: Install Dependencies
              run: sudo apt-get clean && sudo apt-get update && sudo apt-get install -y default-jdk
      
            - name: Cache Gradle dependencies
              uses: actions/cache@v4
              with:
                path: ~/.gradle/caches/modules-2/
                key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                restore-keys: ${{ runner.os }}-gradle-

            - name: Detox build
              run: |
                cd detox
                npm install
                npm install -g detox-cli
                npm run e2e:android-build

            - name: ci/upload-android-pr-build
              uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
              with:
                name: android-build-apk-${{ github.run_id }}
                path: "android/app/build/outputs/apk/**/app-*.apk"

    run-android-tests:
      # if: github.event.label.name == 'E2E Android tests for PR'
      # needs: build-android-apk
      runs-on: macos-14
      steps:
        - name: ci/checkout-repo
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
          with:
            ref: ${{ github.event.pull_request.head.sha }}

        # - name: Download APK artifact
        #   uses: actions/download-artifact@v4
        #   with:
        #     name: android-build-apk-13046110009
        #     path: android/app/build/outputs/apk/

        - name: Create destination path
          run: mkdir -p android/app/build/outputs/apk

        - name: Download artifact
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            curl -L -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/mattermost/mattermost-mobile/actions/artifacts/2508660502/zip \
                --output android/app/build/outputs/apk/artifact.zip

        - name: Unzip artifact
          run: unzip android/app/build/outputs/apk/artifact.zip -d android/app/build/outputs/apk

        - name: List unzipped files
          run: ls -la android/app/build/outputs/apk

        - name: Cleanup
          run: |
            find android/app/build -type f
            rm android/app/build/outputs/apk/artifact.zip

        # - name: Install Dependencies
        #   run: |
        #     sudo apt-get clean
        #     sudo apt-get update
        #     sudo apt-get install -y default-jdk

        # - name: Install Emulator Dependencies
        #   run: |
        #     sudo apt-get update
        #     sudo apt-get install -y libpulse0 libnss3 libxcomposite1 libxcursor1 libxi6 libxtst6 libasound2t64 libatk1.0-0 libgtk-3-0

        - name: Cache Gradle dependencies
          uses: actions/cache@v4
          with:
            path: ~/.gradle/caches/modules-2/
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: ${{ runner.os }}-gradle-

        - name: Install Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '16'

        - name: Install Android SDK
          uses: android-actions/setup-android@v3

        - name: Accept licenses
          run: yes | sdkmanager --licenses

        - name: Install required SDK components
          run: |
            sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0" "emulator" "system-images;android-31;google_apis;x86_64"

        - name: Create AVD
          run: |
            echo "no" | avdmanager create avd --force --name detox_pixel_4_xl_api_31 --package "system-images;android-31;google_apis;x86_64" --device "pixel_4_xl"

        - name: Start emulator
          run: |
            emulator -avd detox_pixel_4_xl_api_31 -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect &
            adb wait-for-device
            while [[ "$(adb shell getprop sys.boot_completed)" != "1" ]]; do
              sleep 2
            done
            echo "Emulator is ready."

        - name: Run Detox tests
          run: |
            cd detox
            npm install
            npm install -g detox-cli
            npm run e2e:android-test -- about.e2e.ts
